# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- script: |
    sudo apt-get install openjdk-11-jdk
  displayName: 'Installing Jdk 11'

- task: CopyFiles@2
  inputs:
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)'
    
- publish: '$(build.artifactstagingdirectory)'
  artifact: '$(BUILD.REPOSITORY.NAME).WebApps'
  displayName: 'Publish project artifact'
#- task: Maven@3
#  inputs:
#    mavenPomFile: 'pom.xml'
#    mavenOptions: '-Xmx3072m'
#    javaHomeOption: 'JDKVersion'
#    goals: 'clean test -Pweb-execution -Dsuite=all -Dheadless=true'
#    publishJUnitResults: true
#    testResultsFiles: '**/surefire-reports/TEST-*.xml'
#    mavenVersionOption: 'Default'
#    mavenAuthenticateFeed: false
#    effectivePomSkip: false
#    sonarQubeRunAnalysis: false
#    jdkVersionOption: '1.11'
#    jdkArchitectureOption: 'x64'
    

# - script: |
#     mvn clean test -Pweb-execution -Dsuite=all -D
# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     goals: --settings $(Agent.TempDirectory)/mavenSettings clean test -P web-execution -D suite=all
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     javaHomeOption: 'JDKVersion'
#     mavenVersionOption: 'Default'
#     mavenAuthenticateFeed: false
#     effectivePomSkip: false
#     sonarQubeRunAnalysis: false
#     jdkVersionOption: '1.11'
#     jdkArchitectureOption: 'x64'
